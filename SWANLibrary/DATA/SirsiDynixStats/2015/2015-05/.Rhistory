res <- tryCatch({b*sum(filtergames(p))},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
filtergames <- function(charvec) {
#print(lapply(charvec, function(c) games[games[[c]]==1,]))
do.call(rbind, lapply(charvec, function(c) games[games[[c]]==1,]))
}
results <- Map(function(outerp, outerb) {
Map(function(p, b){
res <- tryCatch({b*sum(filtergames(p)$Stakes)},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
filtergames <- function(charvec) {
print(lapply(charvec, function(c) games[games[[c]]==1,]))
do.call(rbind, lapply(charvec, function(c) games[games[[c]]==1,]))
}
results <- Map(function(outerp, outerb) {
Map(function(p, b){
res <- tryCatch({b*sum(filtergames(p)$Stakes)},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
View(mgames)
View(mgames)
filtergames <- function(charvec) {
print(mgames[mgames$Player %in% charvec,])
do.call(rbind, lapply(charvec, function(c) mgames[mgames$Player %in% charvec,]))
}
results <- Map(function(outerp, outerb) {
Map(function(p, b){
res <- tryCatch({b*sum(filtergames(p)$Stakes)},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
View(mgames)
filtergames <- function(charvec) {
print(lapply(charvec, function(c) mgames[mgames$Player==c,]))
do.call(rbind, lapply(charvec, function(c) mgames[mgames$Player==c,]))
}
results <- Map(function(outerp, outerb) {
Map(function(p, b){
res <- tryCatch({b*sum(filtergames(p)$Stakes)},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
games
filtergames <- function(charvec) {
games[rowSums(games[players]) == length(charvec) &
rowSums(games[players[!(players == charvec)]]) == 0,]
}
results <- Map(function(outerp, outerb) {
Map(function(p, b){
res <- tryCatch({b*sum(filtergames(p)$Stakes)},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
games[players[!(players == "n2")]]
games[players[!(players == c("n2","n3")]]
games[players[!(players %in% c("n2","n3"))]]
filtergames <- function(charvec) {
games[rowSums(games[players]) == length(charvec) &
rowSums(games[players[!(players %in% charvec)]]) == 0,]
}
results <- Map(function(outerp, outerb) {
Map(function(p, b){
res <- tryCatch({b*sum(filtergames(p)$Stakes)},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
filtergames <- function(charvec) {
df <- games[rowSums(games[players]) == length(charvec) &
rowSums(games[players[!(players %in% charvec)]]) == 0,]
print(df)
}
results <- Map(function(outerp, outerb) {
Map(function(p, b){
res <- tryCatch({b*sum(filtergames(p)$Stakes)},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
filtergames <- function(charvec) {
df <- games[rowSums(games[players]) == length(charvec),]
print(df)
}
results <- Map(function(outerp, outerb) {
Map(function(p, b){
res <- tryCatch({b*sum(filtergames(p)$Stakes)},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
filtergames <- function(charvec) {
df <- games[rowSums(games[players]) >= length(charvec),]
print(df)
}
results <- Map(function(outerp, outerb) {
Map(function(p, b){
res <- tryCatch({b*sum(filtergames(p)$Stakes)},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
View(mgames)
View(games)
filtergames <- function(charvec) {
df <- games[rowSums(games[players]) >= length(p) &
games[[charvec[[1]]]]==1,]
#df <- do.call(rbind, dflist)
print(df)
}
results <- Map(function(outerp, outerb) {
Map(function(p, b){
res <- tryCatch({b*sum(filtergames(p)$Stakes)},
error=function(e) return(NA))
return(res)
},  outerp, outerb)
}, playercombos, baserates)
games
mgames
aggregagte(~Stakes+Wins+Success_Rate, mgames, FUN=sum)
aggregate(~Stakes+Wins+Success_Rate, mgames, FUN=sum)
aggregate(.~Stakes+Wins+Success_Rate, mgames, FUN=sum)
games[games$Success_Rate==0.0075,]
games[,games$Success_Rate]
View(games)
games$Success_Rate
games$Success_Rate[games$Success_Rate==0.075]
games[games$Success_Rate==0.075,]
colnames(games[games$Success_Rate==0.075,])
colnames(games[games$Success_Rate==0.075,])[1:4]
paste(colnames(games[games$Success_Rate==0.075,])[1:4], collapse=",")
"n1" %in% paste(colnames(games[games$Success_Rate==0.075,])[1:4], collapse=",")
grep1("n1", paste(colnames(games[games$Success_Rate==0.075,])[1:4], collapse=",")
)
grepl("n1", paste(colnames(games[games$Success_Rate==0.075,])[1:4], collapse=",")
)
colnames(games[games$Success_Rate==0.075])[grep("n1", paste(colnames(games[games$Success_Rate==0.075,])]
df <- aggregate(.~Stakes+Wins+Success_Rate, mgames, FUN=sum)
library(readxl)
setwd("D:\\Freelance Work\\Database_Work\\LibraryDataAnalysis\\SWANCircActivity\\NewStats\\stats\\2015 05 May")
df <- read_excel("Checkouts_Interface_May2015.xlsx")
View(df)
?read_excel
View(df)
setwd("D:\\Freelance Work\\Database_Work\\LibraryDataAnalysis\\SWANCircActivity\\NewStats\\stats\\2015 05 May")
df <- read_excel("Checkouts_Interface_May2015.xlsx", skip = 4)
names(df)[1] <- "Library"
View(df)
df <- complete.cases(df)
df <- read_excel("Checkouts_Interface_May2015.xlsx", skip = 4)
names(df)[1] <- "Library"
df <- df[complete.cases(df),]
View(df)
df <- read_excel("Renewals_Interface_May2015.xlsx")
View(df)
View(df)
df <- read_excel("Renewals_Interface_May2015.xlsx", skip = 4)
names(df)[1] <- "Library"
df <- df[complete.cases(df),]
View(df)
df <- read_excel("Holds_Interface_May2015.xlsx")
View(df)
View(df)
df <- read_excel("Holds_Interface_May2015.xlsx", skip = 4)
names(df)[1] <- "Library"
df <- df[complete.cases(df),]
View(df)
df <- read_excel("Patrons_Added_May2015.xlsx")
View(df)
View(df)
df <- read_excel("Patrons_Added_May2015.xlsx", skip = 2)
names(df) <- c("Library", "PatronsAdded")
df <- df[complete.cases(df),]
View(df)
df <- read_excel("Patrons_Added_May2015.xlsx", skip = 3)
names(df) <- c("Library", "PatronsAdded")
df <- df[complete.cases(df),]
View(df)
library(reshape2)
df <- read_excel("Checkins_May2015.xlsx")
View(df)
View(df)
df <- read_excel("Checkins_May2015.xlsx"), skip = 4)
names(df)[1] <- "Library"
df <- read_excel("Checkins_May2015.xlsx", skip = 4)
names(df)[1] <- "Library"
View(df)
df <- read_excel("Checkins_May2015.xlsx", skip = 5)
names(df)[1] <- "Library"
View(df)
df <- df[complete.cases(df),]
mdf <- melt(df, id.vars="Library")
View(mdf)
mdf <- melt(df, id.vars="Library", value.name="CheckIns")
View(mdf)
mdf <- melt(df, id.vars="Library",
value.name="CheckIns", variable.name="Source")
View(df)
View(mdf)
df <- read_excel("Checkouts_UserProfile.xlsx")
View(df)
df <- read_excel("Checkouts_UserProfile.xlsx", skip = 5)
View(df)
df <- read_excel("Checkouts_UserProfile.xlsx", skip = 5)
names(df)[1] <- "Library"
df <- df[complete.cases(df),]
mdf <- melt(df, id.vars="Library",
value.name="CheckOuts", variable.name="Section")
View(mdf)
unique(mdf$Section)
?strsplit
strsplit("SVS_ADULT", "_")[2]
strsplit("SVS_ADULT", "_")
strsplit("SVS_ADULT", "_")[[1]][1]
mdf <- melt(df, id.vars="Library",
value.name="CheckOuts", variable.name="SourceSection")
mdf$Source = strsplit(mdf$SourceSection, "_")[[1]][1]
mdf$Section = strsplit(mdf$SourceSection, "_")[[1]][2]
mdf$Source = vapply(mdf$Source_Section, function(s)
strsplit(s, "_")[[1]][1], character(1))
mdf <- melt(df, id.vars="Library",
value.name="CheckOuts", variable.name="Source_Section")
mdf$Source <- vapply(mdf$Source_Section, function(s)
strsplit(s, "_")[[1]][1], character(1))
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grep("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), "yes", "no"), character(1))
View(mdf)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
?strsplit
View(mdf)
unique(mdf$Source_Section)
unique(is.na(mdf$Source_Section))
min(mdf$Source_Section))
min(mdf$Source_Section)
min(as.character(mdf$Source_Section))
mdf <- melt(df, id.vars="Library",
value.name="CheckOuts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
View(mdf)
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s), character(1))
View(df)
View(mdf)
View(mdf)
aggdf <- aggregate(.~Library+Section, mdf[c("Library", "Section", "Checkouts")], FUN=sum)
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s), character(1))
aggdf <- aggregate(.~Library+Section, mdf[c("Library", "Section", "Checkouts")], FUN=sum)
View(aggdf)
str(mdf)
View(aggdf)
?aggregate
aggdf <- aggregate(.~Library+Section, mdf[c("Library", "Section", "Checkouts")],
FUN=sum, stringsAsFactors = FALSE)
View(aggdf)
str(mdf[c("Library", "Section", "Checkouts")])
aggdf <- aggregate(Checkouts~Library+Section, mdf,
FUN=sum, stringsAsFactors = FALSE)
View(aggdf)
aggdf <- aggregate(Checkouts~Library+Section, mdf, FUN=length)
View(aggdf)
View(mdf)
aggdf <- aggregate(Checkouts~Library+Section, mdf, FUN=sum)
str(aggdf)
aggdf <- aggregate(Checkouts~Library+Section, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
aggdf$Section <- vapply(aggdf$Section, function(s)
unique(mdf$Section)[as.integer(s)], character(1))
aggdf <- aggregate(Checkouts~Library, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
df <- read_excel("Checkouts_Interface_May2015.xlsx", skip = 4)
names(df)[1] <- "Library"
df <- df[complete.cases(df),]
View(df)
df <- read_excel("Checkouts_UserProfile.xlsx", skip = 5)
names(df)[1] <- "Library"
df <- df[complete.cases(df),]
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s), character(1))
aggdf <- aggregate(Checkouts~Library, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
aggdf <- aggregate(Checkouts~Library, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
19528/2
View(mdf)
View(mdf[mdf$Library=="ADS",])
df <- read_excel("Checkouts_UserProfile.xlsx", skip = 5)
names(df)[1] <- "Library"
df <- df[complete.cases(df) & df$Library!='TOTAL',]
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s), character(1))
aggdf <- aggregate(Checkouts ~ Library + Section, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
aggdf <- aggregate(Checkouts ~ Library, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s), character(1))
aggdf <- aggregate(Checkouts ~ Library, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
View(mdf[mdf$Library=="ADS",])
df <- read_excel("Checkouts_UserProfile.xlsx", skip = 5)
names(df)[1] <- "Library"
View(df)
df <- df[complete.cases(df) & df$Library!='TOTAL',]
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
View(df)
df <- read_excel("Checkouts_UserProfile.xlsx", skip = 5)
names(df)[1] <- "Library"
df <- df[complete.cases(df) & df$Library!='TOTAL',]
df$TOTAL <- NULL
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s), character(1))
aggdf <- aggregate(Checkouts ~ Library, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
aggdf <- aggregate(Checkouts ~ Library + Section, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
unique(mdf$Section)
length(unique(mdf$Section))
length(unique(aggdf$Section))
unique(mdf$Section)[1]
aggdf$Section <- vapply(aggdf$Section, function(s)
unique(mdf$Section)[as.integer(s)])
aggdf$Section <- vapply(aggdf$Section, function(s)
unique(mdf$Section)[as.integer(s)], character(1))
warnings()
View(aggdf)
aggdf <- aggregate(Checkouts ~ Library + Section, mdf, FUN=sum,
stringsAsFactors = FALSE)
unique(aggdf$Section)
df <- read_excel("Checkouts_UserProfile.xlsx", skip = 5)
names(df)[1] <- "Library"
df <- df[complete.cases(df) & df$Library!='TOTAL',]
df$TOTAL <- NULL
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s), character(1))
unique(mdf$Section)
unique(mdf$Source)
mdf$Section <- vapply(mdf$Source_Section, function(s){
print(s, strsplit(s, "_")[[1]][2])
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s)
}, character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s){
print(paste(s, strsplit(s, "_")[[1]][2]))
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s)
}, character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s){
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s)
}, character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s){
print(ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s))
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s)
}, character(1))
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][2], s), character(1))
View(mdf[mdf$Section %in% c("1", "2", "3"),])
grepl("_", "GENERIC_")
grepl("_", "GENERIC_1")
grepl("_[^0-9]", "GENERIC_1")
grepl("_[^0-9]", "GENERIC_SUB")
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_[^0-9]", s), strsplit(s, "_")[[1]][2], s), character(1))
aggdf <- aggregate(Checkouts ~ Library + Section, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
View(mdf[mdf$Section %in% c("A"),])
View(mdf[mdf$Section %in% c("B"),])
grepl("_[A-Z]{1}", "GENERIC_S")
grepl("_[A-Z]{1}", "GENERIC_SUB")
grepl("_[A-Z]\\{1\\}", "GENERIC_SUB")
grepl("_[A-Z]\\{1\\}", "GENERIC_A")
grepl("^_[A-Z]$", "GENERIC_A")
grepl("*_[A-Z]$", "GENERIC_A")
grepl("*_[A-Z]{1}$", "GENERIC_A")
grepl("*_[A-Z]{1}$", "GENERIC_SUB")
grepl("*_[A-Z]^{1}$", "GENERIC_SUB")
grepl("*_[A-Z]{2,}$", "GENERIC_SUB")
grepl("*_[A-Z]{2,}$", "GENERIC_A")
mdf <- melt(df, id.vars="Library",
value.name="Checkouts", variable.name="Source_Section")
mdf$Source_Section <- as.character(mdf$Source_Section)
mdf$Source <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_", s), strsplit(s, "_")[[1]][1], s), character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_[^0-9]|_[A-Z]{2,}$", s), strsplit(s, "_")[[1]][2], s), character(1))
aggdf <- aggregate(Checkouts ~ Library + Section, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
grepl("_[^0-9]|_[A-Z]{2,}$", "GENERIC_A")
grepl("[_[^0-9]]|[_[A-Z]{2,}$]", "GENERIC_A")
grepl("[_[^0-9]]|[_[A-Z]{2,}$]", "GENERIC_SUB")
grepl("[_[^0-9]|_[A-Z]{2,}$]", "GENERIC_SUB")
grepl("[_[^0-9]|_[A-Z]{2,}$]", "GENERIC_A")
grepl("_([^0-9]|{2,})$", "GENERIC_A")
grepl("_([^0-9]|[A-Z]{2,})$", "GENERIC_A")
grepl("_([A-Z]{2,})$", "GENERIC_A")
grepl("_([A-Z]{2,})$", "GENERIC_SUB")
grepl("_([^0-9]|[^A-Z]{1})$", "GENERIC_A")
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_[^0-9]", s),
ifelse(grepl("_[A-Z]{2,}$", s), strsplit(s, "_")[[1]][2], s)),
character(1))
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_[^0-9]", s), strsplit(s, "_")[[1]][2],
ifelse(grepl("_[A-Z]{2,}$", s), strsplit(s, "_")[[1]][2], s)),
character(1))
aggdf <- aggregate(Checkouts ~ Library + Section, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
mdf$Section <- vapply(mdf$Source_Section, function(s)
ifelse(grepl("_[^0-9]", s) &
grepl("_[A-Z]{2,}$", s), strsplit(s, "_")[[1]][2], s), character(1))
aggdf <- aggregate(Checkouts ~ Library + Section, mdf, FUN=sum,
stringsAsFactors = FALSE)
View(aggdf)
df <- read_excel("Checkouts_ILL.xlsx")
View(df)
df <- read_excel("Checkouts_ILL.xlsx", skip = 4)
View(df)
View(df)
df <- df[complete.cases(df),]
df <- read_excel("Checkouts_ILL.xlsx", skip = 4)
names(df)[1] <- c("Library")
df <- df[complete.cases(df),]
View(df)
df <- read_excel("Checkouts_ILL.xlsx", skip = 4)
names(df)[c(1, ncol(df))] <- c("Library", "Loans")
df <- df[complete.cases(df),]
View(df)
df <- read_excel("Holds_Interface_May2015.xlsx", skip = 4)
names(df)[1] <- "Library"
df <- df[complete.cases(df),]
View(df)
df <- read_excel("Checkouts_Interface_May2015.xlsx", skip = 4)
names(df)[c(1, ncol(df))] <- c("Library", "Checkouts")
df <- df[complete.cases(df),]
View(df)
df <- read_excel("Holds_Interface_May2015.xlsx", skip = 4)
names(df)[c(1, ncol(df))] <- c("Library", "Holds")
df <- df[complete.cases(df),]
View(df)
